include("bar.tis");

let paths = ["C:\\Users\\testuser\\Downloads",
             "C:\\Users\\testuser\\Documents",
             "C:\\Users\\testuser\\Pictures",
             "C:\\Users\\testuser2\\Downloads",
             "C:\\Users\\testuser2\\Documents",
             "C:\\Users\\testuser2\\Pictures",
             "C:\\Users\\testuser2\\Music"];

let numFileSizeMismatched = 0;
let numFileMissing = 0;
let numFileOK = 0;

function self.ready() {
    // Set up the progress bar
    self.$(#verify-bar-text).value = "0%";
    self.$(#time-left).value = "Time Left: XX:XX";

    self.$(#ok-cancel-button).on("click", function() {
        view.close();
    });
    self.$(#export-button).on("click", function() {
        view.close();
    });
    self.timer(1000, updateProgress, true);
    retrieveMessages();
}

function updateProgress() {
    bar.incrementProgess();

    let path = paths[rand(paths.length)];
    // For demo + testing purpose

    let n = rand(100);
    if (n < 10) {
        log(String.$({path} has a file size mismatch.));
        numFileSizeMismatched++;
    } else if (n < 30) {
        log(String.$({path} is missing!));
        numFileMissing++;
    } else {
        log(String.$({path} is fine.));
        numFileOK++;
    }
    // ends here

    if (!bar.isDone()) {
        self.timer(500, updateProgress, true);
    } else {
        self.$(#ok-cancel-button).content("Ok");
        log(String.$({numFileOK} are OK, {numFileSizeMismatched} have file size mismatch, {numFileMissing} are missing!));
    }
}

function retrieveMessages() {
    let messages = [];
    for (let message of messages) {
        log(message);
    }
}

function log(message) {
    let spanElem = new Element("span");
    spanElem.content(message);
    let brElem = new Element("br");
    self.$(#log).append(spanElem);
    self.$(#log).append(brElem);
}
